@using Aibest.Business.Services;
@model ResumeModel
@{
    ViewData["ResumeId"] = Model.Id;
    ViewData["EditMode"] = false;
    var imageBase64 = Model.PictureBytes != null ? Convert.ToBase64String(Model.PictureBytes) : string.Empty;
}


<div class="container">
    <main role="main" class="p-3 card">
        <div id="cv-content">
            @if (Model.PictureBytes != null)
            {
                <div class="justify-content-end d-flex">
                    <img height="150" src="@Url.Action("GetResumeImage", new { id = Model.Id })">
                </div>
            }

            <div>
                <partial name="_PersonalInfoReviewSection" model="@Model" view-data="@ViewData" />
                <partial name="_SkillsSection" model="@Model" view-data="@ViewData" />
                <partial name="_LanguageSection" model="@Model" view-data="@ViewData" />
                <partial name="_EducationSection" model="@Model" view-data="@ViewData" />
                <partial name="_JobSection" model="@Model" view-data="@ViewData" />
                <partial name="_CertificateSection" model="@Model" view-data="@ViewData" />
            </div>
        </div>
        <div>
            @{  
                var aicontroller = new ResumeGradeService();
                var result = await aicontroller.GradeResume(Model);
            }
            <h3 class="fs-3 mt-3 mb-2">AI grading result</h3>
            <hr style="height: 2px">

            <p>@result</p>
        </div>

        

        <div class="me-2 d-flex">
            <button class="btn btn-info me-2" id="generate-pdf">Download PDF</button>
            <a class="btn btn-dark" href="@Url.Action("Index")">Close</a>
        </div>
    </main>
</div>

@section Scripts {
    <script>
        var resumeImageBase64 = null;
        if ('@imageBase64' != '') {
            resumeImageBase64 = 'data:image/jpeg;base64,' + "@Html.Raw(imageBase64)";
        }
    </script>
}

